version: '3.8'

services:
  # Init container to populate host directories
  oracle-forms-init:
    build:
      context: .
      dockerfile: Dockerfile
    image: oracle-forms-14c:latest
    container_name: oracle-forms-init
    command: >
      bash -c "
        echo '🔧 Initializing host directories with Oracle configuration files...'

        # Copy TNS Admin files
        echo '📋 Copying TNS configuration...'
        cp -r /u01/app/oracle/product/fmw14.1.2.0/network/admin/. /host_volumes/tns_admin/ 2>/dev/null || true

        # Copy Reports config files
        echo '📊 Copying Reports configuration...'
        cp -r /u01/app/oracle/product/fmw14.1.2.0/reports/conf/. /host_volumes/reports_config/ 2>/dev/null || true

        # Copy domain if not exists
        echo '🏗️ Checking domain configuration...'
        if [ ! -d '/host_volumes/oracle_domain_data/forms_domain' ]; then
          echo 'Creating initial domain structure...'
          mkdir -p /host_volumes/oracle_domain_data
        fi

        # Create directory structure
        echo '📁 Creating directory structure...'
        mkdir -p /host_volumes/forms_source
        mkdir -p /host_volumes/reports_source
        mkdir -p /host_volumes/applications/forms
        mkdir -p /host_volumes/applications/reports
        mkdir -p /host_volumes/applications/resources
        mkdir -p /host_volumes/oracle_logs

        # Set permissions
        echo '🔐 Setting permissions...'
        chmod -R 755 /host_volumes/tns_admin 2>/dev/null || true
        chmod -R 755 /host_volumes/reports_config 2>/dev/null || true

        echo '✅ Host directories initialized successfully!'
      "
    volumes:
      - ./tns_admin:/host_volumes/tns_admin
      - ./reports_config:/host_volumes/reports_config
      - ./oracle_domain_data:/host_volumes/oracle_domain_data
      - ./forms_source:/host_volumes/forms_source
      - ./reports_source:/host_volumes/reports_source
      - ./applications:/host_volumes/applications
      - ./oracle_logs:/host_volumes/oracle_logs
    profiles:
      - init

  oracle-forms:
    build:
      context: .
      dockerfile: Dockerfile
    image: oracle-forms-14c:latest
    container_name: oracle-forms-14c
    hostname: oracle-forms

    ports:
      - "7001:7001"   # WebLogic Admin Server & Hosted Console
      - "9001:9001"   # Forms Server
      - "9002:9002"   # Reports Server
      - "5556:5556"   # Additional WebLogic port
      - "5557:5557"   # Additional WebLogic port

    environment:
      # Oracle environment variables
      - ORACLE_HOME=/u01/app/oracle/product/fmw14.1.2.0
      - DOMAIN_HOME=/u01/app/oracle/config/domains/forms_domain
      - JAVA_HOME=/u01/app/oracle/product/jdk17
      - ADMIN_PORT=7001
      - FORMS_PORT=9001
      - REPORTS_PORT=9002

      # WebLogic admin credentials (change these in production)
      - ADMIN_USERNAME=weblogic
      - ADMIN_PASSWORD=Oracle123

      # JVM settings
      - JAVA_OPTIONS=-Xmx2048m -Xms1024m

    volumes:
      # Persist WebLogic domain data
      - ./oracle_domain_data:/u01/app/oracle/config/domains
      # Persist logs
      - ./oracle_logs:/u01/app/oracle/product/fmw14.1.2.0/logs
      # TNS Admin for database connections (tnsnames.ora, etc.)
      - ./tns_admin:/u01/app/oracle/product/fmw14.1.2.0/network/admin
      # Mount Forms source files for compilation
      - ./forms_source:/u01/app/oracle/forms_source
      # Mount Reports configuration and templates
      - ./reports_config:/u01/app/oracle/product/fmw14.1.2.0/reports/conf
      # Mount Reports source files (.rdf)
      - ./reports_source:/u01/app/oracle/reports_source
      # Mount compiled applications for deployment
      - ./applications:/u01/app/oracle/config/domains/forms_domain/autodeploy

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7001/console", "||", "exit", "1"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 300s

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Optional: Add a reverse proxy for better external access
  nginx:
    image: nginx:alpine
    container_name: oracle-forms-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./ssl:/etc/nginx/ssl:ro  # Uncomment for SSL certificates
    depends_on:
      - oracle-forms
    restart: unless-stopped
    profiles:
      - proxy  # Use 'docker-compose --profile proxy up' to include this service

volumes:
  oracle_domain_data:
    driver: local
  oracle_logs:
    driver: local

networks:
  default:
    name: oracle-forms-network
    driver: bridge